{"version":3,"sources":["auth.utils.js"],"names":["jwt","require","user","console","log","process","env","JWT_SECRET","sign","id","_id","expiresIn","statusCode","res","token","generateToken","status","json","module","sendResponseWithToken"],"mappings":"aAAA,IAAMA,IAAMC,QAAQ,gBAAdD,cAAc,SAAAE,GAGlBC,OAAAA,QAAQC,IAAI,eAAgBC,QAAQC,IAAIC,YAAjCP,IAAPQ,KAAY,CAAAC,GAAAP,EAAZQ,IAA4BL,KAAQC,EAAIC,MAAxCF,QAAAC,IAAAC,WAAA,CAEAI,UAAWH,SACTG,sBAAkB,SAAAT,EAAAU,EAAAC,GAKpB,IAAMC,EAAQC,cAAcb,GAN+CW,EAA3EG,OAAAJ,GAAAK,KAAA,CAAAR,GAAAP,EAAAQ,IAAAI,MAAAA,KAKFI,OAAMC,QAAAA,CACJJ,cAAAA,cACAF,sBAAAA","file":"auth.utils.min.js","sourcesContent":["const jwt = require(\"jsonwebtoken\");\n\nconst generateToken = (user) => {\n  console.log(\"JWT Secret: \", process.env.JWT_SECRET);\n\n  return jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, {\n    expiresIn: \"24h\", // Token expires in 24 hours\n  });\n};\n\nconst sendResponseWithToken = (user, statusCode, res) => {\n  const token = generateToken(user);\n  res.status(statusCode).json({ id: user._id, token });\n};\n\nmodule.exports = {\n  generateToken,\n  sendResponseWithToken,\n};\n"]}