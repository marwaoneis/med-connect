"use strict";var _require=require("../utils/auth.utils"),generateToken=_require.generateToken,sendResponseWithToken=_require.sendResponseWithToken,bcrypt=require("bcrypt"),Patient=require("../models/patient.model");exports.registerPatient=function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=new Patient(r.body),e.next=4,regeneratorRuntime.awrap(n.save());case 4:sendResponseWithToken(n,201,t),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),t.status(400).json({error:e.t0.message});case 10:case"end":return e.stop()}},null,null,[[0,7]])},exports.loginPatient=function(r,t){var n,s,a,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("Received login request for patient"),e.prev=1,n=r.body,s=n.username,a=n.password,e.next=5,regeneratorRuntime.awrap(Patient.findOne({username:s}));case 5:if(o=e.sent){e.next=8;break}return e.abrupt("return",t.status(401).json({error:"Invalid login credentials"}));case 8:return e.next=10,regeneratorRuntime.awrap(bcrypt.compare(a,o.password));case 10:if(e.sent){e.next=13;break}return e.abrupt("return",t.status(401).json({error:"Invalid login credentials"}));case 13:sendResponseWithToken(o,200,t),e.next=19;break;case 16:e.prev=16,e.t0=e.catch(1),t.status(500).json({error:e.t0.message});case 19:case"end":return e.stop()}},null,null,[[1,16]])};
//# sourceMappingURL=patient.auth.controllers.min.js.map
