{"version":3,"sources":["chat.controller.js"],"names":["Chat","require","createChat","req","res","chat","body","save","status","json","error","message","getChatById","findById","params","id","updateChatById","findByIdAndUpdate","deleteChatById","findByIdAndDelete","getChatByPatientAndDoctor","findOne","patientId","doctorId","getChatsByPatientId","find","chats","getChatsByDoctorId","module","exports"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,wBAAD,CAApB,C,CAEA;;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAETC,UAAAA,IAFS,GAEF,IAAIL,IAAJ,CAASG,GAAG,CAACG,IAAb,CAFE;AAAA;AAAA,0CAGTD,IAAI,CAACE,IAAL,EAHS;;AAAA;AAIfH,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,IAArB;AAJe;AAAA;;AAAA;AAAA;AAAA;AAMfD,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE,YAAMC;AAAf,WAArB;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB,C,CAUA;;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOT,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEGJ,IAAI,CAACa,QAAL,CAAcV,GAAG,CAACW,MAAJ,CAAWC,EAAzB,CAFH;;AAAA;AAEVV,UAAAA,IAFU;;AAAA,cAGXA,IAHW;AAAA;AAAA;AAAA;;AAAA,4CAIPD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB,CAJO;;AAAA;AAMhBN,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,IAArB;AANgB;AAAA;;AAAA;AAAA;AAAA;AAQhBD,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB;;AARgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB,C,CAYA;;;AACA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAAOb,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEAJ,IAAI,CAACiB,iBAAL,CAAuBd,GAAG,CAACW,MAAJ,CAAWC,EAAlC,EAAsCZ,GAAG,CAACG,IAA1C,EAAgD;AACjE,mBAAK;AAD4D,WAAhD,CAFA;;AAAA;AAEbD,UAAAA,IAFa;;AAAA,cAKdA,IALc;AAAA;AAAA;AAAA;;AAAA,4CAMVD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB,CANU;;AAAA;AAQnBN,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,IAArB;AARmB;AAAA;;AAAA;AAAA;AAAA;AAUnBD,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB;;AAVmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,C,CAcA;;;AACA,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAAOf,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEAJ,IAAI,CAACmB,iBAAL,CAAuBhB,GAAG,CAACW,MAAJ,CAAWC,EAAlC,CAFA;;AAAA;AAEbV,UAAAA,IAFa;;AAAA,cAGdA,IAHc;AAAA;AAAA;AAAA;;AAAA,4CAIVD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB,CAJU;;AAAA;AAMnBN,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,YAAAA,OAAO,EAAE;AAAX,WAArB;AANmB;AAAA;;AAAA;AAAA;AAAA;AAQnBP,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB;;AARmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,C,CAYA;;;AACA,IAAMU,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAOjB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEXJ,IAAI,CAACqB,OAAL,CAAa;AAC9BC,YAAAA,SAAS,EAAEnB,GAAG,CAACW,MAAJ,CAAWQ,SADQ;AAE9BC,YAAAA,QAAQ,EAAEpB,GAAG,CAACW,MAAJ,CAAWS;AAFS,WAAb,CAFW;;AAAA;AAExBlB,UAAAA,IAFwB;;AAAA,cAMzBA,IANyB;AAAA;AAAA;AAAA;;AAAA,4CAOrBD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB,CAPqB;;AAAA;AAS9BN,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,IAArB;AAT8B;AAAA;;AAAA;AAAA;AAAA;AAW9BD,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB;;AAX8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlC,C,CAeA;;;AACA,IAAMc,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAOrB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEJJ,IAAI,CAACyB,IAAL,CAAU;AAAEH,YAAAA,SAAS,EAAEnB,GAAG,CAACW,MAAJ,CAAWQ;AAAxB,WAAV,CAFI;;AAAA;AAElBI,UAAAA,KAFkB;AAGxBtB,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBiB,KAArB;AAHwB;AAAA;;AAAA;AAAA;AAAA;AAKxBtB,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB;;AALwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B,C,CASA;;;AACA,IAAMiB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAOxB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEHJ,IAAI,CAACyB,IAAL,CAAU;AAAEF,YAAAA,QAAQ,EAAEpB,GAAG,CAACW,MAAJ,CAAWS;AAAvB,WAAV,CAFG;;AAAA;AAEjBG,UAAAA,KAFiB;AAGvBtB,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBiB,KAArB;AAHuB;AAAA;;AAAA;AAAA;AAAA;AAKvBtB,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAArB;;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AASAkB,MAAM,CAACC,OAAP,GAAiB;AACf3B,EAAAA,UAAU,EAAVA,UADe;AAEfU,EAAAA,WAAW,EAAXA,WAFe;AAGfI,EAAAA,cAAc,EAAdA,cAHe;AAIfE,EAAAA,cAAc,EAAdA,cAJe;AAKfE,EAAAA,yBAAyB,EAAzBA,yBALe;AAMfI,EAAAA,mBAAmB,EAAnBA,mBANe;AAOfG,EAAAA,kBAAkB,EAAlBA;AAPe,CAAjB","sourcesContent":["const Chat = require(\"./../models/chat.model\");\n\n// Create a new chat\nconst createChat = async (req, res) => {\n  try {\n    const chat = new Chat(req.body);\n    await chat.save();\n    res.status(201).json(chat);\n  } catch (error) {\n    res.status(400).json({ error: error.message });\n  }\n};\n\n// Get a single chat by ID\nconst getChatById = async (req, res) => {\n  try {\n    const chat = await Chat.findById(req.params.id);\n    if (!chat) {\n      return res.status(404).json({ error: \"Chat not found\" });\n    }\n    res.status(200).json(chat);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Update a chat by ID\nconst updateChatById = async (req, res) => {\n  try {\n    const chat = await Chat.findByIdAndUpdate(req.params.id, req.body, {\n      new: true,\n    });\n    if (!chat) {\n      return res.status(404).json({ error: \"Chat not found\" });\n    }\n    res.status(200).json(chat);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Delete a chat by ID\nconst deleteChatById = async (req, res) => {\n  try {\n    const chat = await Chat.findByIdAndDelete(req.params.id);\n    if (!chat) {\n      return res.status(404).json({ error: \"Chat not found\" });\n    }\n    res.status(204).json({ message: \"Chat deleted!\" });\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Get chat by patientId and doctorId\nconst getChatByPatientAndDoctor = async (req, res) => {\n  try {\n    const chat = await Chat.findOne({\n      patientId: req.params.patientId,\n      doctorId: req.params.doctorId,\n    });\n    if (!chat) {\n      return res.status(404).json({ error: \"Chat not found\" });\n    }\n    res.status(200).json(chat);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Get chats by patientId\nconst getChatsByPatientId = async (req, res) => {\n  try {\n    const chats = await Chat.find({ patientId: req.params.patientId });\n    res.status(200).json(chats);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Get chats by doctorId\nconst getChatsByDoctorId = async (req, res) => {\n  try {\n    const chats = await Chat.find({ doctorId: req.params.doctorId });\n    res.status(200).json(chats);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\nmodule.exports = {\n  createChat,\n  getChatById,\n  updateChatById,\n  deleteChatById,\n  getChatByPatientAndDoctor,\n  getChatsByPatientId,\n  getChatsByDoctorId,\n};\n"],"file":"chat.controller.dev.js"}