{"version":3,"sources":["patient.controller.js"],"names":["Patient","require","exports","getAllPatients","req","res","find","patients","json","status","message","getPatient","findById","params","id","patient","createPatient","body","save","newPatient","updatePatient","findByIdAndUpdate","updatedPatient","deletePatient","remove"],"mappings":"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","sourcesContent":["const Patient = require(\"../models/patient.model\");\n\nexports.getAllPatients = async (req, res) => {\n  try {\n    const patients = await Patient.find();\n    res.json(patients);\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n};\n\nexports.getPatient = async (req, res) => {\n  try {\n    const patient = await Patient.findById(req.params.id);\n    if (!patient) return res.status(404).json({ message: \"Patient not found\" });\n    res.json(patient);\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n};\n\nexports.createPatient = async (req, res) => {\n  const patient = new Patient(req.body);\n  try {\n    const newPatient = await patient.save();\n    res.status(201).json(newPatient);\n  } catch (err) {\n    res.status(400).json({ message: err.message });\n  }\n};\n\nexports.updatePatient = async (req, res) => {\n  try {\n    const updatedPatient = await Patient.findByIdAndUpdate(\n      req.params.id,\n      req.body,\n      { new: true }\n    );\n    res.json(updatedPatient);\n  } catch (err) {\n    res.status(400).json({ message: err.message });\n  }\n};\n\nexports.deletePatient = async (req, res) => {\n  try {\n    const patient = await Patient.findById(req.params.id);\n    if (!patient) return res.status(404).json({ message: \"Patient not found\" });\n    await patient.remove();\n    res.json({ message: \"Deleted Patient\" });\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n};\n"],"file":"patient.controller.dev.js"}