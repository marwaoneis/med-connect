{"version":3,"sources":["doctor.controller.js"],"names":["Doctor","require","createDoctor","req","res","doctor","regeneratorRuntime","async","_context","prev","next","awrap","save","status","json","t0","error","message","stop","getAllDoctors","doctors","_context2","find","sent","_context3","findById","params","id","abrupt","_context4","findByIdAndUpdate","body","new","deleteDoctorById","_context5","findByIdAndDelete","getDoctorByUsername","_context6","findOne","username","getDoctorById","module","exports","updateDoctorById"],"mappings":"aAAA,IAAMA,OAASC,QAAQ,4BAGjBC,aAAe,SAAOC,EAAKC,GAAZ,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAfP,EAAe,IAAAF,OAAfE,EAAAA,MAAeM,EAAAE,KAAA,EAAAJ,mBAAAK,MAAAN,EAAAO,QAAA,KAAA,EAAAR,EAAAS,OAAA,KAAAC,KAAAT,GAAAG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,MAAA,GAAAJ,EAAAS,OAAA,KAAAC,KAAA,CAAAE,MAAAR,EAAAO,GAAAE,UAAA,KAAA,GAAA,IAAA,MAAA,OAAAT,EAAAU,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAAC,cAAA,SAAAhB,EAAAC,GAAA,IAAAgB,EAAA,OAAAd,mBAAAC,MAAA,SAAAc,GAAA,OAAA,OAAAA,EAAAZ,KAAAY,EAAAX,MAAA,KAAA,EAAA,OAAAW,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EAAAJ,mBAAAK,MAAAX,OAAAsB,QAAA,KAAA,EAAAF,EAAAC,EAAAE,KAIjBnB,EAAAA,OAAIS,KAAJC,KAAAM,GAJiBC,EAAAX,KAAA,GAAA,MAAA,KAAA,EAAAW,EAAAZ,KAAA,EAAAY,EAAAN,GAAAM,EAAA,MAAA,GAAAjB,EAAAS,OAAA,KAAAC,KAAA,CAAAE,MAAA,0BAAA,KAAA,GAAA,IAAA,MAAA,OAAAK,EAAAH,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAMjBd,cAAW,SAAKU,EAAKV,GAAV,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAiB,GAAA,OAAA,OAAAA,EAAAf,KAAAe,EAAAd,MAAA,KAAA,EAAA,OAAAc,EAAAf,KAAA,EAAAe,EAAAd,KAAA,EAAAJ,mBAAAK,MAAXX,OAAAyB,SAAAtB,EAAAuB,OAAAC,KAAW,KAAA,EAAA,GAAUtB,EAAVmB,EAAAD,KAAA,CAAAC,EAAAd,KAAA,EAAA,MAAA,OAAAc,EAAAI,OAAA,SANMxB,EAAAS,OAAA,KAAAC,KAAA,CAAAE,MAAA,sBAMN,KAAA,EANMZ,EAAAS,OAAA,KAAAC,KAAAT,GAMNmB,EAAAd,KAAA,GAAA,MAAA,KAAA,EAAAc,EAAAf,KAAA,EAAAe,EAAAT,GAAAS,EAAA,MAAA,GANMpB,EAAAS,OAAA,KAAAC,KAAA,CAAAE,MAAA,0BAMN,KAAA,GAAA,IAAA,MAAA,OAAAQ,EAAAN,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAKTC,iBAAgB,SAAhBA,EAAAA,GAAgB,IAAAd,EAAA,OAAAC,mBAAAC,MAAA,SAAAsB,GAAA,OAAA,OAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,KAAA,EAAA,OAAAmB,EAAApB,KAAA,EAAAoB,EAAAnB,KAAA,EAAAJ,mBAAAK,MAAAX,OAAA8B,kBAAA3B,EAAAuB,OAAAC,GAAAxB,EAAA4B,KAAA,CAAAC,KAAA,KAAA,KAAA,EAAA,GAAA3B,EAAAwB,EAAAN,KAAA,CAAAM,EAAAnB,KAAA,EAAA,MAAA,OAAAmB,EAAAD,OAAA,SAAAxB,EAAAS,OAAA,KAAAC,KAAA,CAAAE,MAAA,sBAAA,KAAA,EAAAZ,EAAAS,OAAA,KAAAC,KAAAT,GAAAwB,EAAAnB,KAAA,GAAA,MAAA,KAAA,EAAAmB,EAAApB,KAAA,EAAAoB,EAAAd,GAAAc,EAAA,MAAA,GAAAzB,EAAAS,OAAA,KAAAC,KAAA,CAAAE,MAAA,0BAAA,KAAA,GAAA,IAAA,MAAA,OAAAa,EAAAX,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAsChBe,iBAAmB,SAAO9B,EAAKC,GAAZ,OAAAE,mBAAAC,MAAA,SAAA2B,GAAA,OAAA,OAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,KAAA,EAAA,OAAAwB,EAAAzB,KAAA,EAAAyB,EAAAxB,KAAA,EAAAJ,mBAAAK,MAtCHX,OAAAmC,kBAAAhC,EAAAuB,OAAAC,KAsCG,KAAA,EAAA,GAAAO,EAAAX,KAAA,CAAAW,EAAAxB,KAAA,EAAA,MAAA,OAAAwB,EAAAN,OAAA,SAjClBxB,EAACS,OAAJ,KAAgBC,KAAK,CAAAE,MAAA,sBAiCA,KAAA,EAjCAZ,EAAAS,OAArB,KAAAC,KAAA,CAAAG,QAAA,mBAiCqBiB,EAAAxB,KAAA,GAAA,MAAA,KAAA,EAAAwB,EAAAzB,KAAA,EAAAyB,EAAAnB,GAAAmB,EAAA,MAAA,GAtCH9B,EAAAS,OAAA,KAAAC,KAAA,CAAAE,MAAA,0BAsCG,KAAA,GAAA,IAAA,MAAA,OAAAkB,EAAAhB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAtCHkB,oBAAA,SAAAjC,EAAAC,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAA8B,GAAA,OAAA,OAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,KAAA,EAAA,OAAA2B,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAAAJ,mBAAAK,MAqDGX,OAAOsC,QAAQ,CAAEC,SAAUpC,EAAIuB,OAAOa,YArDzC,KAAA,EAAA,GAqDZlC,EArDYgC,EAAAd,KAAA,CAAAc,EAAA3B,KAAA,EAAA,MAAA,OAAA2B,EAAAT,OAAA,SAUhBY,EAAa3B,OAAG,KAAhB2B,KAAAA,CAAAA,MAAuBrC,sBAVP,KAAA,EAUAC,EAAAS,OAAA,KAAAC,KAAAT,GAVAgC,EAAA3B,KAAA,GAAA,MAAA,KAAA,EAAA2B,EAAA5B,KAAA,EAAA4B,EAAAtB,GAAAsB,EAAA,MAAA,GAUAjC,EAAAS,OAAA,KAAAC,KAAA,CAAAE,MAAA,0BAVA,KAAA,GAAA,IAAA,MAAA,OAAAqB,EAAAnB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAUAuB,OAAAC,QAAA,CAsDpBxC,aAAAA,aAtDoBiB,cAAAA,cAEZd,cAAAA,cAuDRsC,iBAAAA,iBAzDoBV,iBAAAA,iBAAAG,oBAAAA","file":"doctor.controller.min.js","sourcesContent":["const Doctor = require(\"./../models/doctor.model\");\n\n// Create a new doctor\nconst createDoctor = async (req, res) => {\n  try {\n    const doctor = new Doctor(req.body);\n    await doctor.save();\n    res.status(201).json(doctor);\n  } catch (error) {\n    res.status(400).json({ error: error.message });\n  }\n};\n\n// Get all doctors\nconst getAllDoctors = async (req, res) => {\n  try {\n    const doctors = await Doctor.find();\n    res.status(200).json(doctors);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Get a single doctor by ID\nconst getDoctorById = async (req, res) => {\n  try {\n    const doctor = await Doctor.findById(req.params.id);\n    if (!doctor) {\n      return res.status(404).json({ error: \"Doctor not found\" });\n    }\n    res.status(200).json(doctor);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Update a doctor by ID\nconst updateDoctorById = async (req, res) => {\n  try {\n    const doctor = await Doctor.findByIdAndUpdate(req.params.id, req.body, {\n      new: true,\n    });\n    if (!doctor) {\n      return res.status(404).json({ error: \"Doctor not found\" });\n    }\n    res.status(200).json(doctor);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Delete a doctor by ID\nconst deleteDoctorById = async (req, res) => {\n  try {\n    const doctor = await Doctor.findByIdAndDelete(req.params.id);\n    if (!doctor) {\n      return res.status(404).json({ error: \"Doctor not found\" });\n    }\n    res.status(204).json({ message: \"Doctor Deleted\" });\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Get doctor by username\nconst getDoctorByUsername = async (req, res) => {\n  try {\n    const doctor = await Doctor.findOne({ username: req.params.username });\n    if (!doctor) {\n      return res.status(404).json({ error: \"Doctor not found\" });\n    }\n    res.status(200).json(doctor);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\nmodule.exports = {\n  createDoctor,\n  getAllDoctors,\n  getDoctorById,\n  updateDoctorById,\n  deleteDoctorById,\n  getDoctorByUsername,\n};\n"]}