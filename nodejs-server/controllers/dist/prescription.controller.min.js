"use strict";var Prescription=require("./../models/prescription.model"),createPrescription=function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=new Prescription(r.body),e.next=4,regeneratorRuntime.awrap(n.save());case 4:t.status(201).json(n),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),t.status(400).json({error:e.t0.message});case 10:case"end":return e.stop()}},null,null,[[0,7]])},getAllPrescriptions=function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Prescription.find());case 3:t=e.sent,r.status(200).json(t),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),r.status(500).json({error:"Internal Server Error"});case 10:case"end":return e.stop()}},null,null,[[0,7]])},getPrescriptionById=function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Prescription.findById(r.params.id));case 3:if(n=e.sent){e.next=6;break}return e.abrupt("return",t.status(404).json({error:"Prescription not found"}));case 6:t.status(200).json(n),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),t.status(500).json({error:"Internal Server Error"});case 12:case"end":return e.stop()}},null,null,[[0,9]])},updatePrescriptionById=function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Prescription.findByIdAndUpdate(r.params.id,r.body,{new:!0}));case 3:if(n=e.sent){e.next=6;break}return e.abrupt("return",t.status(404).json({error:"Prescription not found"}));case 6:t.status(200).json(n),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),t.status(500).json({error:"Internal Server Error"});case 12:case"end":return e.stop()}},null,null,[[0,9]])},deletePrescriptionById=function(r,t){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Prescription.findByIdAndDelete(r.params.id));case 3:if(e.sent){e.next=6;break}return e.abrupt("return",t.status(404).json({error:"Prescription not found"}));case 6:t.status(204).json(),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),t.status(500).json({error:"Internal Server Error"});case 12:case"end":return e.stop()}},null,null,[[0,9]])},getPrescriptionsByPatientId=function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Prescription.find({patientId:r.params.patientId}));case 3:n=e.sent,t.status(200).json(n),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),t.status(500).json({error:"Internal Server Error"});case 10:case"end":return e.stop()}},null,null,[[0,7]])},getPrescriptionsByDoctorId=function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Prescription.find({doctorId:r.params.doctorId}));case 3:n=e.sent,t.status(200).json(n),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),t.status(500).json({error:"Internal Server Error"});case 10:case"end":return e.stop()}},null,null,[[0,7]])};module.exports={createPrescription:createPrescription,getAllPrescriptions:getAllPrescriptions,getPrescriptionById:getPrescriptionById,updatePrescriptionById:updatePrescriptionById,deletePrescriptionById:deletePrescriptionById,getPrescriptionsByPatientId:getPrescriptionsByPatientId,getPrescriptionsByDoctorId:getPrescriptionsByDoctorId};
//# sourceMappingURL=prescription.controller.min.js.map
