{"version":3,"sources":["appointment.controller.js"],"names":["Appointment","require","createAppointment","req","res","appointment","body","save","status","json","error","message","getAppointmentById","findById","params","id","getAppointmentsByPatientId","find","patientId","appointments","getAppointmentsByDoctorId","doctorId","updateAppointmentById","findByIdAndUpdate","deleteAppointmentById","findByIdAndDelete","module","exports"],"mappings":"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","sourcesContent":["const Appointment = require(\"./../models/appointment.model\");\n\n// Create a new appointment\nconst createAppointment = async (req, res) => {\n  try {\n    const appointment = new Appointment(req.body);\n    await appointment.save();\n    res.status(201).json(appointment);\n  } catch (error) {\n    res.status(400).json({ error: error.message });\n  }\n};\n\n// Get a single appointment by ID\nconst getAppointmentById = async (req, res) => {\n  try {\n    const appointment = await Appointment.findById(req.params.id);\n    if (!appointment) {\n      return res.status(404).json({ error: \"Appointment not found\" });\n    }\n    res.status(200).json(appointment);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Get all appointments by patientId\nconst getAppointmentsByPatientId = async (req, res) => {\n  try {\n    const appointments = await Appointment.find({\n      patientId: req.params.patientId,\n    });\n    res.status(200).json(appointments);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Get all appointments by doctorId\nconst getAppointmentsByDoctorId = async (req, res) => {\n  try {\n    const appointments = await Appointment.find({\n      doctorId: req.params.doctorId,\n    });\n    res.status(200).json(appointments);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Update an appointment by ID\nconst updateAppointmentById = async (req, res) => {\n  try {\n    const appointment = await Appointment.findByIdAndUpdate(\n      req.params.id,\n      req.body,\n      { new: true }\n    );\n    if (!appointment) {\n      return res.status(404).json({ error: \"Appointment not found\" });\n    }\n    res.status(200).json(appointment);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Delete an appointment by ID\nconst deleteAppointmentById = async (req, res) => {\n  try {\n    const appointment = await Appointment.findByIdAndDelete(req.params.id);\n    if (!appointment) {\n      return res.status(404).json({ error: \"Appointment not found\" });\n    }\n    res.status(204).json({ message: \"Pharmacy Deleted\" });\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\nmodule.exports = {\n  createAppointment,\n  getAppointmentsByPatientId,\n  getAppointmentsByDoctorId,\n  getAppointmentById,\n  updateAppointmentById,\n  deleteAppointmentById,\n};\n"],"file":"appointment.controller.dev.js"}