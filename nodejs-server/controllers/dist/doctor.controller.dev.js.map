{"version":3,"sources":["doctor.controller.js"],"names":["Doctor","require","createDoctor","req","res","doctor","body","save","status","json","error","message","getAllDoctors","find","doctors","getDoctorById","findById","params","id","updateDoctorById","findByIdAndUpdate","deleteDoctorById","findByIdAndDelete","getDoctorByUsername","findOne","username","module","exports"],"mappings":"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","sourcesContent":["const Doctor = require(\"./../models/doctor.model\");\n\n// Create a new doctor\nconst createDoctor = async (req, res) => {\n  try {\n    const doctor = new Doctor(req.body);\n    await doctor.save();\n    res.status(201).json(doctor);\n  } catch (error) {\n    res.status(400).json({ error: error.message });\n  }\n};\n\n// Get all doctors\nconst getAllDoctors = async (req, res) => {\n  try {\n    const doctors = await Doctor.find();\n    res.status(200).json(doctors);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Get a single doctor by ID\nconst getDoctorById = async (req, res) => {\n  try {\n    const doctor = await Doctor.findById(req.params.id);\n    if (!doctor) {\n      return res.status(404).json({ error: \"Doctor not found\" });\n    }\n    res.status(200).json(doctor);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Update a doctor by ID\nconst updateDoctorById = async (req, res) => {\n  try {\n    const doctor = await Doctor.findByIdAndUpdate(req.params.id, req.body, {\n      new: true,\n    });\n    if (!doctor) {\n      return res.status(404).json({ error: \"Doctor not found\" });\n    }\n    res.status(200).json(doctor);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Delete a doctor by ID\nconst deleteDoctorById = async (req, res) => {\n  try {\n    const doctor = await Doctor.findByIdAndDelete(req.params.id);\n    if (!doctor) {\n      return res.status(404).json({ error: \"Doctor not found\" });\n    }\n    res.status(204).json({ message: \"Doctor Deleted\" });\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Get doctor by username\nconst getDoctorByUsername = async (req, res) => {\n  try {\n    const doctor = await Doctor.findOne({ username: req.params.username });\n    if (!doctor) {\n      return res.status(404).json({ error: \"Doctor not found\" });\n    }\n    res.status(200).json(doctor);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\nmodule.exports = {\n  createDoctor,\n  getAllDoctors,\n  getDoctorById,\n  updateDoctorById,\n  deleteDoctorById,\n  getDoctorByUsername,\n};\n"],"file":"doctor.controller.dev.js"}