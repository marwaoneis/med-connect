"use strict";var Appointment=require("./../models/appointment.model"),createAppointment=function(t,n){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,r=new Appointment(t.body),e.next=4,regeneratorRuntime.awrap(r.save());case 4:n.status(201).json(r),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),n.status(400).json({error:e.t0.message});case 10:case"end":return e.stop()}},null,null,[[0,7]])},getAppointmentById=function(t,n){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Appointment.findById(t.params.id));case 3:if(r=e.sent){e.next=6;break}return e.abrupt("return",n.status(404).json({error:"Appointment not found"}));case 6:n.status(200).json(r),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),n.status(500).json({error:"Internal Server Error"});case 12:case"end":return e.stop()}},null,null,[[0,9]])},getAppointmentsByPatientId=function(t,n){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Appointment.find({patientId:t.params.patientId}));case 3:r=e.sent,n.status(200).json(r),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),n.status(500).json({error:"Internal Server Error"});case 10:case"end":return e.stop()}},null,null,[[0,7]])},getAppointmentsByDoctorId=function(t,n){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Appointment.find({doctorId:t.params.doctorId}));case 3:r=e.sent,n.status(200).json(r),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),n.status(500).json({error:"Internal Server Error"});case 10:case"end":return e.stop()}},null,null,[[0,7]])},updateAppointmentById=function(t,n){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Appointment.findByIdAndUpdate(t.params.id,t.body,{new:!0}));case 3:if(r=e.sent){e.next=6;break}return e.abrupt("return",n.status(404).json({error:"Appointment not found"}));case 6:n.status(200).json(r),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),n.status(500).json({error:"Internal Server Error"});case 12:case"end":return e.stop()}},null,null,[[0,9]])},deleteAppointmentById=function(t,n){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Appointment.findByIdAndDelete(t.params.id));case 3:if(e.sent){e.next=6;break}return e.abrupt("return",n.status(404).json({error:"Appointment not found"}));case 6:n.status(204).json({message:"Pharmacy Deleted"}),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),n.status(500).json({error:"Internal Server Error"});case 12:case"end":return e.stop()}},null,null,[[0,9]])};module.exports={createAppointment:createAppointment,getAppointmentsByPatientId:getAppointmentsByPatientId,getAppointmentsByDoctorId:getAppointmentsByDoctorId,getAppointmentById:getAppointmentById,updateAppointmentById:updateAppointmentById,deleteAppointmentById:deleteAppointmentById};
//# sourceMappingURL=appointment.controller.min.js.map
