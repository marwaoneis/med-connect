"use strict";var Chat=require("./../models/chat.model"),createChat=function(t,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=new Chat(t.body),e.next=4,regeneratorRuntime.awrap(n.save());case 4:r.status(201).json(n),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),r.status(400).json({error:e.t0.message});case 10:case"end":return e.stop()}},null,null,[[0,7]])},getChatById=function(t,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Chat.findById(t.params.id));case 3:if(n=e.sent){e.next=6;break}return e.abrupt("return",r.status(404).json({error:"Chat not found"}));case 6:r.status(200).json(n),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),r.status(500).json({error:"Internal Server Error"});case 12:case"end":return e.stop()}},null,null,[[0,9]])},updateChatById=function(t,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Chat.findByIdAndUpdate(t.params.id,t.body,{new:!0}));case 3:if(n=e.sent){e.next=6;break}return e.abrupt("return",r.status(404).json({error:"Chat not found"}));case 6:r.status(200).json(n),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),r.status(500).json({error:"Internal Server Error"});case 12:case"end":return e.stop()}},null,null,[[0,9]])},deleteChatById=function(t,r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Chat.findByIdAndDelete(t.params.id));case 3:if(e.sent){e.next=6;break}return e.abrupt("return",r.status(404).json({error:"Chat not found"}));case 6:r.status(204).json({message:"Chat deleted!"}),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),r.status(500).json({error:"Internal Server Error"});case 12:case"end":return e.stop()}},null,null,[[0,9]])},getChatByPatientAndDoctor=function(t,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Chat.findOne({patientId:t.params.patientId,doctorId:t.params.doctorId}));case 3:if(n=e.sent){e.next=6;break}return e.abrupt("return",r.status(404).json({error:"Chat not found"}));case 6:r.status(200).json(n),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),r.status(500).json({error:"Internal Server Error"});case 12:case"end":return e.stop()}},null,null,[[0,9]])},getChatsByPatientId=function(t,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Chat.find({patientId:t.params.patientId}));case 3:n=e.sent,r.status(200).json(n),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),r.status(500).json({error:"Internal Server Error"});case 10:case"end":return e.stop()}},null,null,[[0,7]])},getChatsByDoctorId=function(t,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Chat.find({doctorId:t.params.doctorId}));case 3:n=e.sent,r.status(200).json(n),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),r.status(500).json({error:"Internal Server Error"});case 10:case"end":return e.stop()}},null,null,[[0,7]])};module.exports={createChat:createChat,getChatById:getChatById,updateChatById:updateChatById,deleteChatById:deleteChatById,getChatByPatientAndDoctor:getChatByPatientAndDoctor,getChatsByPatientId:getChatsByPatientId,getChatsByDoctorId:getChatsByDoctorId};
//# sourceMappingURL=chat.controller.min.js.map
