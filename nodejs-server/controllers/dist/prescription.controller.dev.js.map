{"version":3,"sources":["prescription.controller.js"],"names":["Prescription","require","exports","getAllPrescriptions","req","res","find","prescriptions","json","status","message","getPrescription","findById","params","id","prescription","createPrescription","body","save","newPrescription","updatePrescription","findByIdAndUpdate","deletePrescription","remove"],"mappings":"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","sourcesContent":["const Prescription = require(\"../models/prescription.model\");\n\nexports.getAllPrescriptions = async (req, res) => {\n  try {\n    const prescriptions = await Prescription.find();\n    res.json(prescriptions);\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n};\n\nexports.getPrescription = async (req, res) => {\n  try {\n    const prescription = await Prescription.findById(req.params.id);\n    if (!prescription)\n      return res.status(404).json({ message: \"Prescription not found\" });\n    res.json(prescription);\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n};\n\nexports.createPrescription = async (req, res) => {\n  const prescription = new Prescription(req.body);\n  try {\n    const newPrescription = await prescription.save();\n    res.status(201).json(newPrescription);\n  } catch (err) {\n    res.status(400).json({ message: err.message });\n  }\n};\n\nexports.updatePrescription = async (req, res) => {\n  try {\n    const updatePrescription = await Prescription.findByIdAndUpdate(\n      req.params.id,\n      req.body,\n      { new: true }\n    );\n    res.json(updatePrescription);\n  } catch (err) {\n    res.status(400).json({ message: err.message });\n  }\n};\n\nexports.deletePrescription = async (req, res) => {\n  try {\n    const prescription = await Prescription.findById(req.params.id);\n    if (!prescription)\n      return res.status(404).json({ message: \"Prescription not found\" });\n    await prescription.remove();\n    res.json({ message: \"Deleted Prescription\" });\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n};\n"],"file":"prescription.controller.dev.js"}