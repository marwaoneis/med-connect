{"version":3,"sources":["prescription.controller.js"],"names":["Prescription","require","createPrescription","req","res","prescription","body","save","status","json","error","message","getAllPrescriptions","find","prescriptions","getPrescriptionById","findById","params","id","updatePrescriptionById","findByIdAndUpdate","deletePrescriptionById","findByIdAndDelete","getPrescriptionsByPatientId","patientId","getPrescriptionsByDoctorId","doctorId","module","exports"],"mappings":"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","sourcesContent":["const Prescription = require(\"./../models/prescription.model\");\n\n// Create a new prescription\nconst createPrescription = async (req, res) => {\n  try {\n    const prescription = new Prescription(req.body);\n    await prescription.save();\n    res.status(201).json(prescription);\n  } catch (error) {\n    res.status(400).json({ error: error.message });\n  }\n};\n\n// Get all prescriptions\nconst getAllPrescriptions = async (req, res) => {\n  try {\n    const prescriptions = await Prescription.find();\n    res.status(200).json(prescriptions);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Get a single prescription by ID\nconst getPrescriptionById = async (req, res) => {\n  try {\n    const prescription = await Prescription.findById(req.params.id);\n    if (!prescription) {\n      return res.status(404).json({ error: \"Prescription not found\" });\n    }\n    res.status(200).json(prescription);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Update a prescription by ID\nconst updatePrescriptionById = async (req, res) => {\n  try {\n    const prescription = await Prescription.findByIdAndUpdate(\n      req.params.id,\n      req.body,\n      { new: true }\n    );\n    if (!prescription) {\n      return res.status(404).json({ error: \"Prescription not found\" });\n    }\n    res.status(200).json(prescription);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Delete a prescription by ID\nconst deletePrescriptionById = async (req, res) => {\n  try {\n    const prescription = await Prescription.findByIdAndDelete(req.params.id);\n    if (!prescription) {\n      return res.status(404).json({ error: \"Prescription not found\" });\n    }\n    res.status(204).json(); // No content\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Get prescriptions by patientId\nconst getPrescriptionsByPatientId = async (req, res) => {\n  try {\n    const prescriptions = await Prescription.find({\n      patientId: req.params.patientId,\n    });\n    res.status(200).json(prescriptions);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\n// Get prescriptions by doctorId\nconst getPrescriptionsByDoctorId = async (req, res) => {\n  try {\n    const prescriptions = await Prescription.find({\n      doctorId: req.params.doctorId,\n    });\n    res.status(200).json(prescriptions);\n  } catch (error) {\n    res.status(500).json({ error: \"Internal Server Error\" });\n  }\n};\n\nmodule.exports = {\n  createPrescription,\n  getAllPrescriptions,\n  getPrescriptionById,\n  updatePrescriptionById,\n  deletePrescriptionById,\n  getPrescriptionsByPatientId,\n  getPrescriptionsByDoctorId,\n};\n"],"file":"prescription.controller.dev.js"}