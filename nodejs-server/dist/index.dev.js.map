{"version":3,"sources":["index.js"],"names":["express","require","connectToMongoDB","config","cors","app","use","json","urlencoded","extended","patientRoutes","prescriptionRoutes","pharmacyRoutes","medicineRoutes","medicationOrderRoutes","doctorRoutes","chatRoutes","appointmentRoutes","origin","PORT","process","env","listen","console","log"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eAC6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACRD,OAAO,CAAC,QAAD,CAAP,CAAkBE,MAAlB;;AACA,IAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,IAAMI,GAAG,GAAGL,OAAO,EAAnB;AACAK,GAAG,CAACC,GAAJ,CAAQN,OAAO,CAACO,IAAR,EAAR,E,CAEA;;AACAF,GAAG,CAACC,GAAJ,CAAQN,OAAO,CAACO,IAAR,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQN,OAAO,CAACQ,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAEA;AACA;AACA;AAEA;;AACA,IAAMC,aAAa,GAAGT,OAAO,CAAC,yBAAD,CAA7B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaI,aAAb,E,CAEA;;AACA,IAAMC,kBAAkB,GAAGV,OAAO,CAAC,8BAAD,CAAlC;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaK,kBAAb,E,CAEA;;AACA,IAAMC,cAAc,GAAGX,OAAO,CAAC,0BAAD,CAA9B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaM,cAAb,E,CAEA;;AACA,IAAMC,cAAc,GAAGZ,OAAO,CAAC,0BAAD,CAA9B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaO,cAAb,E,CAEA;;AACA,IAAMC,qBAAqB,GAAGb,OAAO,CAAC,kCAAD,CAArC;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaQ,qBAAb,E,CAEA;;AACA,IAAMC,YAAY,GAAGd,OAAO,CAAC,wBAAD,CAA5B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaS,YAAb,E,CAEA;;AACA,IAAMC,UAAU,GAAGf,OAAO,CAAC,sBAAD,CAA1B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaU,UAAb,E,CAEA;;AACA,IAAMC,iBAAiB,GAAGhB,OAAO,CAAC,4BAAD,CAAjC;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaW,iBAAb;AAEAZ,GAAG,CAACC,GAAJ,CAAQF,IAAI,CAAC;AAAEc,EAAAA,MAAM,EAAE;AAAV,CAAD,CAAZ,E,CAEA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAzB;AACAd,GAAG,CAACiB,MAAJ,CAAWH,IAAX,EAAiB,YAAM;AACrBI,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CL,IAA1C;AACAjB,EAAAA,gBAAgB;AACjB,CAHD","sourcesContent":["const express = require(\"express\");\nconst { connectToMongoDB } = require(\"./config/mongoDb.config\");\nrequire(\"dotenv\").config();\nconst cors = require(\"cors\");\n\n//Initilizing app as express method\nconst app = express();\napp.use(express.json());\n\n// Middlewares for parsing JSON and URL-encoded data\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// auth route\n// const authRoutes = require(\"./routes/auth.routes\");\n// app.use(\"/auth\", authRoutes);\n\n// patient routes\nconst patientRoutes = require(\"./routes/patient.routes\");\napp.use(\"/\", patientRoutes);\n\n// prescription routes\nconst prescriptionRoutes = require(\"./routes/prescription.routes\");\napp.use(\"/\", prescriptionRoutes);\n\n// pharmacy routes\nconst pharmacyRoutes = require(\"./routes/pharmacy.routes\");\napp.use(\"/\", pharmacyRoutes);\n\n// medicine routes\nconst medicineRoutes = require(\"./routes/medicine.routes\");\napp.use(\"/\", medicineRoutes);\n\n// medication order routes\nconst medicationOrderRoutes = require(\"./routes/medication.order.routes\");\napp.use(\"/\", medicationOrderRoutes);\n\n// doctor routes\nconst doctorRoutes = require(\"./routes/doctor.routes\");\napp.use(\"/\", doctorRoutes);\n\n// chat routes\nconst chatRoutes = require(\"./routes/chat.routes\");\napp.use(\"/\", chatRoutes);\n\n// appointment routes\nconst appointmentRoutes = require(\"./routes/appintment.routes\");\napp.use(\"/\", appointmentRoutes);\n\napp.use(cors({ origin: \"http://localhost:3000\" }));\n\n//Listening on server port and logging status\nconst PORT = process.env.PORT;\napp.listen(PORT, () => {\n  console.log(\"Server listining on PORT: \", PORT);\n  connectToMongoDB();\n});\n"],"file":"index.dev.js"}