{"version":3,"sources":["index.js"],"names":["express","require","connectToMongoDB","config","cors","app","use","json","get","req","res","console","log","patientRoutes","prescriptionRoutes","pharmacyRoutes","medicineRoutes","medicationOrderRoutes","doctorRoutes","chatRoutes","appointmentRoutes","origin","listen","process","env","PORT"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eAC6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACRD,OAAO,CAAC,QAAD,CAAP,CAAkBE,MAAlB;;AACA,IAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,IAAMI,GAAG,GAAGL,OAAO,EAAnB;AACAK,GAAG,CAACC,GAAJ,CAAQN,OAAO,CAACO,IAAR,EAAR;AAEAF,GAAG,CAACG,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,CAFD,E,CAIA;AACA;AACA;AAEA;;AACA,IAAMC,aAAa,GAAGZ,OAAO,CAAC,yBAAD,CAA7B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBO,aAApB,E,CAEA;;AACA,IAAMC,kBAAkB,GAAGb,OAAO,CAAC,8BAAD,CAAlC;;AACAI,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBQ,kBAAzB,E,CAEA;;AACA,IAAMC,cAAc,GAAGd,OAAO,CAAC,0BAAD,CAA9B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBS,cAArB,E,CAEA;;AACA,IAAMC,cAAc,GAAGf,OAAO,CAAC,0BAAD,CAA9B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBU,cAArB,E,CAEA;;AACA,IAAMC,qBAAqB,GAAGhB,OAAO,CAAC,kCAAD,CAArC;;AACAI,GAAG,CAACC,GAAJ,CAAQ,mBAAR,EAA6BW,qBAA7B,E,CAEA;;AACA,IAAMC,YAAY,GAAGjB,OAAO,CAAC,wBAAD,CAA5B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBY,YAAnB,E,CAEA;;AACA,IAAMC,UAAU,GAAGlB,OAAO,CAAC,sBAAD,CAA1B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBa,UAAjB,E,CAEA;;AACA,IAAMC,iBAAiB,GAAGnB,OAAO,CAAC,4BAAD,CAAjC;;AACAI,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBc,iBAAxB;AAEAf,GAAG,CAACC,GAAJ,CAAQF,IAAI,CAAC;AAAEiB,EAAAA,MAAM,EAAE;AAAV,CAAD,CAAZ,E,CAEA;;AACAhB,GAAG,CAACiB,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAvB,EAA6B,YAAM;AACjCd,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CW,OAAO,CAACC,GAAR,CAAYC,IAAtD;AACAvB,EAAAA,gBAAgB;AACjB,CAHD","sourcesContent":["const express = require(\"express\");\nconst { connectToMongoDB } = require(\"./config/mongoDb.config\");\nrequire(\"dotenv\").config();\nconst cors = require(\"cors\");\n\n//Initilizing app as express method\nconst app = express();\napp.use(express.json());\n\napp.get(\"/hello\", (req, res) => {\n  console.log(\"HELLO MARWAAAA!!\");\n});\n\n// auth route\n// const authRoutes = require(\"./routes/auth.routes\");\n// app.use(\"/auth\", authRoutes);\n\n// patient routes\nconst patientRoutes = require(\"./routes/patient.routes\");\napp.use(\"/patient\", patientRoutes);\n\n// prescription routes\nconst prescriptionRoutes = require(\"./routes/prescription.routes\");\napp.use(\"/prescription\", prescriptionRoutes);\n\n// pharmacy routes\nconst pharmacyRoutes = require(\"./routes/pharmacy.routes\");\napp.use(\"/pharmacy\", pharmacyRoutes);\n\n// medicine routes\nconst medicineRoutes = require(\"./routes/medicine.routes\");\napp.use(\"/medicine\", medicineRoutes);\n\n// medication order routes\nconst medicationOrderRoutes = require(\"./routes/medication.order.routes\");\napp.use(\"/medication-order\", medicationOrderRoutes);\n\n// doctor routes\nconst doctorRoutes = require(\"./routes/doctor.routes\");\napp.use(\"/doctor\", doctorRoutes);\n\n// chat routes\nconst chatRoutes = require(\"./routes/chat.routes\");\napp.use(\"/chat\", chatRoutes);\n\n// appointment routes\nconst appointmentRoutes = require(\"./routes/appintment.routes\");\napp.use(\"/appointment\", appointmentRoutes);\n\napp.use(cors({ origin: \"http://localhost:3000\" }));\n\n//Listening on server port and logging status\napp.listen(process.env.PORT, () => {\n  console.log(\"Server listining on PORT: \", process.env.PORT);\n  connectToMongoDB();\n});\n"],"file":"index.dev.js"}