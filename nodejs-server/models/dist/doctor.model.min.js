"use strict";var mongoose=require("mongoose"),validator=require("validator"),bcrypt=require("bcrypt"),doctorSchema=new mongoose.Schema({username:{type:String,required:!0,unique:!0,minlength:3,maxlength:30,trim:!0},password:{type:String,required:!0,minlength:6},firstName:{type:String,required:!0,minlength:2},lastName:{type:String,required:!0,minlength:2},email:{type:String,required:!0,unique:!0,validate:[validator.isEmail,"Please provide a valid email"]},address:{type:String,required:!0},phone:{type:String,required:!0},gender:{type:String,enum:["Female","Male"]},specialization:{type:String,required:!0},yearsOfExperience:{type:Number,required:!0},appointmentPrice:{type:Number,required:!0},timing:{startTime:{type:String,required:!0},endTime:{type:String,required:!0},daysOfOperation:{type:String,required:!0}}});doctorSchema.pre("save",function(r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(bcrypt.genSalt(10));case 3:return t=e.sent,e.next=6,regeneratorRuntime.awrap(bcrypt.hash(this.password,t));case 6:this.password=e.sent,r(),e.next=14;break;case 10:e.prev=10,e.t0=e.catch(0),console.log(e.t0),r(e.t0);case 14:case"end":return e.stop()}},null,this,[[0,10]])},{timestamps:!0}),module.exports=mongoose.model("Doctor",doctorSchema);
//# sourceMappingURL=doctor.model.min.js.map
