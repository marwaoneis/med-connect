{"version":3,"sources":["appointment.model.js"],"names":["mongoose","require","AiAssessmentSchema","Schema","patientId","type","Types","ObjectId","ref","required","symptoms","String","aiAssessment","timestamps","appointmentSchema","doctorId","dateTime","Date","status","module","exports","model"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMC,kBAAkB,GAAG,IAAIF,QAAQ,CAACG,MAAb,CACzB;AACEC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAEL,QAAQ,CAACG,MAAT,CAAgBG,KAAhB,CAAsBC,QADnB;AAETC,IAAAA,GAAG,EAAE,SAFI;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GADb;AAMEC,EAAAA,QAAQ,EAAE;AACRL,IAAAA,IAAI,EAAEM,MADE;AAERF,IAAAA,QAAQ,EAAE;AAFF,GANZ;AAUEG,EAAAA,YAAY,EAAE;AACZP,IAAAA,IAAI,EAAEM,MADM;AAEZF,IAAAA,QAAQ,EAAE;AAFE;AAVhB,CADyB,EAgBzB;AAAEI,EAAAA,UAAU,EAAE;AAAd,CAhByB,CAA3B;AAmBA,IAAMC,iBAAiB,GAAG,IAAId,QAAQ,CAACG,MAAb,CACxB;AACEC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAEL,QAAQ,CAACG,MAAT,CAAgBG,KAAhB,CAAsBC,QADnB;AAETC,IAAAA,GAAG,EAAE,SAFI;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GADb;AAMEM,EAAAA,QAAQ,EAAE;AACRV,IAAAA,IAAI,EAAEL,QAAQ,CAACG,MAAT,CAAgBG,KAAhB,CAAsBC,QADpB;AAERC,IAAAA,GAAG,EAAE,QAFG;AAGRC,IAAAA,QAAQ,EAAE;AAHF,GANZ;AAWEO,EAAAA,QAAQ,EAAE;AACRX,IAAAA,IAAI,EAAEY,IADE;AAERR,IAAAA,QAAQ,EAAE;AAFF,GAXZ;AAeEG,EAAAA,YAAY,EAAE,CAACV,kBAAD,CAfhB;AAgBEgB,EAAAA,MAAM,EAAE;AACNb,IAAAA,IAAI,EAAEM,MADA;AAEN,YAAM,CAAC,WAAD,EAAc,WAAd,EAA2B,WAA3B;AAFA;AAhBV,CADwB,EAsBxB;AAAEE,EAAAA,UAAU,EAAE;AAAd,CAtBwB,CAA1B;AAyBAM,MAAM,CAACC,OAAP,GAAiBpB,QAAQ,CAACqB,KAAT,CAAe,aAAf,EAA8BP,iBAA9B,CAAjB","sourcesContent":["const mongoose = require(\"mongoose\");\n\nconst AiAssessmentSchema = new mongoose.Schema(\n  {\n    patientId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Patient\",\n      required: true,\n    },\n    symptoms: {\n      type: String,\n      required: true,\n    },\n    aiAssessment: {\n      type: String,\n      required: true,\n    },\n  },\n  { timestamps: true }\n);\n\nconst appointmentSchema = new mongoose.Schema(\n  {\n    patientId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Patient\",\n      required: true,\n    },\n    doctorId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Doctor\",\n      required: true,\n    },\n    dateTime: {\n      type: Date,\n      required: true,\n    },\n    aiAssessment: [AiAssessmentSchema],\n    status: {\n      type: String,\n      enum: [\"Scheduled\", \"Completed\", \"Cancelled\"],\n    },\n  },\n  { timestamps: true }\n);\n\nmodule.exports = mongoose.model(\"Appointment\", appointmentSchema);\n"],"file":"appointment.model.dev.js"}