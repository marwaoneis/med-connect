{"version":3,"sources":["pharmacy.model.js"],"names":["mongoose","require","validator","Schema","username","bcrypt","String","required","pharmacySchema","type","minlength","maxlength","trim","address","pre","next","salt","regeneratorRuntime","async","_context","prev","awrap","genSalt","sent","hash","this","password","t0","console","log","stop","timestamps","module","exports","model"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YACnBC,UAAYD,QAAQ,aADpBD,OAAWC,QAAQ,UACnBC,eAAmB,IAACF,SAA1BG,OAAA,CAIEC,SAAU,CAHNC,KAAMC,OAKRC,UAAU,EAHRC,QAAAA,EACJJ,UAAU,EACRK,UAAMH,GACNC,MAAAA,GAEAG,SAAAA,CACAC,KAAAA,OACAC,UAAM,EAPiCF,UAAA,GAUvCD,QAAMH,CACNC,KAAAA,OACAG,UAAS,GAEXG,MAAO,CACLJ,KAAMH,OACNC,UAAU,KAIVA,eAAUO,IAFL,OAlBT,SAAAC,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAJ,MAAA,KAAA,EAAA,OAAAI,EAAAC,KAAA,EAAAD,EAAAJ,KAAA,EAAAE,mBAAAI,MA0BEhB,OAAAiB,QAAA,KA1BF,KAAA,EAAA,OA0BEN,EA1BFG,EAAAI,KAAAJ,EAAAJ,KAAA,EAAAE,mBAAAI,MA0BEhB,OAAAmB,KAAAC,KAAAC,SAAAV,IA1BF,KAAA,EA0BES,KAAAC,SA1BFP,EAAAI,KA0BER,IA1BFI,EAAAJ,KAAA,GAAA,MAAA,KAAA,GAAAI,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,MAAA,GA0BES,QAAAC,IAAAV,EAAAQ,IAAAZ,EAAAI,EAAAQ,IA1BF,KAAA,GAAA,IAAA,MAAA,OAAAR,EAAAW,SAAA,KAAAL,KAAA,CAAA,CAAA,EAAA,OAoCE,CAVAM,YAAA,IAeFC,OAAOC,QAAUjC,SAASkC,MAAM,WAAY1B","file":"pharmacy.model.min.js","sourcesContent":["const mongoose = require(\"mongoose\");\nconst validator = require(\"validator\");\nconst bcrypt = require(\"bcrypt\");\n\nconst pharmacySchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n    minlength: 3,\n    maxlength: 30,\n    trim: true,\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 6,\n  },\n  address: {\n    type: String,\n    required: true,\n  },\n  phone: {\n    type: String,\n    required: true,\n  },\n});\n\npharmacySchema.pre(\n  \"save\",\n  async function (next) {\n    try {\n      const salt = await bcrypt.genSalt(10);\n      this.password = await bcrypt.hash(this.password, salt);\n      next();\n    } catch (error) {\n      console.log(error);\n      next(error);\n    }\n  },\n  {\n    timestamps: true,\n  }\n);\n\nmodule.exports = mongoose.model(\"Pharmacy\", pharmacySchema);\n"]}