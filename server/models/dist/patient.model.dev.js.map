{"version":3,"sources":["patient.model.js"],"names":["mongoose","require","validator","bcrypt","patientSchema","Schema","username","type","String","required","unique","minlength","maxlength","trim","password","firstName","lastName","email","validate","isEmail","address","phone","dateOfBirth","Date","gender","additionalInfo","Map","of","Types","Mixed","role","pre","next","isModified","genSalt","salt","hash","console","log","timestamps","module","exports","model"],"mappings":"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","sourcesContent":["const mongoose = require(\"mongoose\");\nconst validator = require(\"validator\");\nconst bcrypt = require(\"bcrypt\");\n\nconst patientSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n    minlength: 3,\n    maxlength: 30,\n    trim: true,\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 6,\n  },\n  firstName: {\n    type: String,\n    required: true,\n    minlength: 2,\n  },\n  lastName: {\n    type: String,\n    required: true,\n    minlength: 2,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    validate: [validator.isEmail, \"Please provide a valid email\"],\n  },\n  address: {\n    type: String,\n    required: true,\n  },\n  phone: {\n    type: String,\n    required: true,\n  },\n  dateOfBirth: {\n    type: Date,\n    required: true,\n  },\n  gender: {\n    type: String,\n    enum: [\"Female\", \"Male\"],\n  },\n  additionalInfo: {\n    type: Map,\n    of: mongoose.Schema.Types.Mixed,\n  },\n  role: {\n    type: String,\n    default: \"Patient\",\n  },\n});\n\npatientSchema.pre(\n  \"save\",\n  async function (next) {\n    if (!this.isModified(\"password\")) {\n      return next();\n    }\n\n    try {\n      const salt = await bcrypt.genSalt(10);\n      this.password = await bcrypt.hash(this.password, salt);\n      next();\n    } catch (error) {\n      console.log(error);\n      next(error);\n    }\n  },\n  {\n    timestamps: true,\n  }\n);\n\nmodule.exports = mongoose.model(\"Patient\", patientSchema);\n"],"file":"patient.model.dev.js"}