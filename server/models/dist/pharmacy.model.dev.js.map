{"version":3,"sources":["pharmacy.model.js"],"names":["mongoose","require","bcrypt","pharmacySchema","Schema","username","type","String","required","unique","minlength","maxlength","trim","password","address","phone","role","pre","next","isModified","genSalt","salt","hash","console","log","timestamps","module","exports","model"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAME,cAAc,GAAG,IAAIH,QAAQ,CAACI,MAAb,CAAoB;AACzCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,IAFF;AAGRC,IAAAA,MAAM,EAAE,IAHA;AAIRC,IAAAA,SAAS,EAAE,CAJH;AAKRC,IAAAA,SAAS,EAAE,EALH;AAMRC,IAAAA,IAAI,EAAE;AANE,GAD+B;AASzCC,EAAAA,QAAQ,EAAE;AACRP,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,IAFF;AAGRE,IAAAA,SAAS,EAAE;AAHH,GAT+B;AAczCI,EAAAA,OAAO,EAAE;AACPR,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GAdgC;AAkBzCO,EAAAA,KAAK,EAAE;AACLT,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAlBkC;AAsBzCQ,EAAAA,IAAI,EAAE;AACJV,IAAAA,IAAI,EAAEC,MADF;AAEJ,eAAS;AAFL;AAtBmC,CAApB,CAAvB;AA4BAJ,cAAc,CAACc,GAAf,CACE,MADF,EAEE,iBAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACO,KAAKC,UAAL,CAAgB,UAAhB,CADP;AAAA;AAAA;AAAA;;AAAA,2CAEWD,IAAI,EAFf;;AAAA;AAAA;AAAA;AAAA,0CAMuBhB,MAAM,CAACkB,OAAP,CAAe,EAAf,CANvB;;AAAA;AAMUC,UAAAA,IANV;AAAA;AAAA,0CAO0BnB,MAAM,CAACoB,IAAP,CAAY,KAAKT,QAAjB,EAA2BQ,IAA3B,CAP1B;;AAAA;AAOI,eAAKR,QAPT;AAQIK,UAAAA,IAAI;AARR;AAAA;;AAAA;AAAA;AAAA;AAUIK,UAAAA,OAAO,CAACC,GAAR;AACAN,UAAAA,IAAI,aAAJ;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAFF,EAgBE;AACEO,EAAAA,UAAU,EAAE;AADd,CAhBF;AAqBAC,MAAM,CAACC,OAAP,GAAiB3B,QAAQ,CAAC4B,KAAT,CAAe,UAAf,EAA2BzB,cAA3B,CAAjB","sourcesContent":["const mongoose = require(\"mongoose\");\nconst bcrypt = require(\"bcrypt\");\n\nconst pharmacySchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n    minlength: 3,\n    maxlength: 30,\n    trim: true,\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 6,\n  },\n  address: {\n    type: String,\n    required: true,\n  },\n  phone: {\n    type: String,\n    required: true,\n  },\n  role: {\n    type: String,\n    default: \"Pharmacy\",\n  },\n});\n\npharmacySchema.pre(\n  \"save\",\n  async function (next) {\n    if (!this.isModified(\"password\")) {\n      return next();\n    }\n\n    try {\n      const salt = await bcrypt.genSalt(10);\n      this.password = await bcrypt.hash(this.password, salt);\n      next();\n    } catch (error) {\n      console.log(error);\n      next(error);\n    }\n  },\n  {\n    timestamps: true,\n  }\n);\n\nmodule.exports = mongoose.model(\"Pharmacy\", pharmacySchema);\n"],"file":"pharmacy.model.dev.js"}