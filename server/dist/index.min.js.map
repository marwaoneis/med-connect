{"version":3,"sources":["index.js"],"names":["express","require","connectToMongoDB","cors","app","json","use","urlencoded","extended","patientAuthRoutes","doctorAuthRoutes","pharmacyAuthRoutes","authenticateToken","patientRoutes","prescriptionRoutes","pharmacyRoutes","medicineRoutes","medicationOrderRoutes","doctorRoutes","chatRoutes","appointmentRoutes","origin","listen","PORT","console"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,oBACKA,QAAQ,2BAA7BC,0BAAAA,iBADRD,QAAMD,UAAUC,SAGhB,IAAME,KAAOF,QAAQ,QAGfG,IAAMJ,UAJZC,IAAAA,IAAQD,QAADK,QAQPD,IAAIE,IAAIN,QAAQK,QAChBD,IAAIE,IAAIN,QAAQO,WAAW,CAAEC,UAAU,KAGvC,IAAMC,kBAAoBR,QAAQ,gCAJlCG,IAAIE,IAAIN,gBAARS,mBAC2B,IAE3BC,iBAAAT,QAAA,+BAMAG,IAAIE,IAAI,eAAgBI,kBAJxBN,IAAIE,mBAAqBG,QAAAA,iCAQzBL,IAAIE,IAAI,iBAAkBK,kCAEIV,QAAQ,gCAA9BW,4BAAAA,kBAHFD,cAAkBV,QAAGA,2BAO3BG,IAAIE,IAAI,IAAKM,kBAAmBC,eAGhC,IAAMC,mBAPgCb,QAAA,gCAQtCG,IARQQ,IAAAA,IAAAA,kBAQwBE,oBALhC,IAAMD,eAAgBZ,QAAQ,4BAS9BG,IAAIE,IAAI,IAAKM,kBAAmBG,gBALhC,IAAMD,eAAkBb,QAAGA,4BAS3BG,IAAIE,IAAI,IAAKM,kBAAmBI,gBALhC,IAAMD,sBAAyBd,QAAA,oCAS/BG,IAAIE,IAAI,IAAKM,kBAAmBK,uBALhC,IAAMD,aAAiBf,QAAQ,0BAS/BG,IAAIE,IAAI,IAAKM,kBAAmBM,cALhC,IAAMD,WAAAA,QAAqB,wBAS3Bb,IAAIE,IAAI,IAAKM,kBAAmBO,YALhC,IAAMD,kBAAsBjB,QAAC,8BAS7BG,IAAIE,IAAI,IAAKM,kBAAmBQ,mBAEhChB,IAAIE,IAAIH,KAAK,CAAEkB,OAAQ,2BANvBjB,IAAIE,KAASM,QAAAA,IAAAA,KAUbR,IAAIkB,OAAOC,KAAM,WAPjBC,QAAMJ,IAAAA,6BAA4BG,MAShCrB","file":"index.min.js","sourcesContent":["const express = require(\"express\");\nconst { connectToMongoDB } = require(\"./config/mongoDb.config\");\nrequire(\"dotenv\").config();\nconst cors = require(\"cors\");\n\n//Initilizing app as express method\nconst app = express();\napp.use(express.json());\n\n// Middlewares for parsing JSON and URL-encoded data\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// patient auth route\nconst patientAuthRoutes = require(\"./routes/patient.auth.routes\");\napp.use(\"/patient/auth\", patientAuthRoutes);\n\n// doctor auth route\nconst doctorAuthRoutes = require(\"./routes/doctor.auth.routes\");\napp.use(\"/doctor/auth\", doctorAuthRoutes);\n\n// pharmacy auth route\nconst pharmacyAuthRoutes = require(\"./routes/pharmacy.auth.routes\");\napp.use(\"/pharmacy/auth\", pharmacyAuthRoutes);\n\nconst { authenticateToken } = require(\"./middleware/auth.middleware\");\n\n// patient routes\nconst patientRoutes = require(\"./routes/patient.routes\");\napp.use(\"/\", authenticateToken, patientRoutes);\n\n// prescription routes\nconst prescriptionRoutes = require(\"./routes/prescription.routes\");\napp.use(\"/\", authenticateToken, prescriptionRoutes);\n\n// pharmacy routes\nconst pharmacyRoutes = require(\"./routes/pharmacy.routes\");\napp.use(\"/\", authenticateToken, pharmacyRoutes);\n\n// medicine routes\nconst medicineRoutes = require(\"./routes/medicine.routes\");\napp.use(\"/\", authenticateToken, medicineRoutes);\n\n// medication order routes\nconst medicationOrderRoutes = require(\"./routes/medication.order.routes\");\napp.use(\"/\", authenticateToken, medicationOrderRoutes);\n\n// doctor routes\nconst doctorRoutes = require(\"./routes/doctor.routes\");\napp.use(\"/\", authenticateToken, doctorRoutes);\n\n// chat routes\nconst chatRoutes = require(\"./routes/chat.routes\");\napp.use(\"/\", authenticateToken, chatRoutes);\n\n// appointment routes\nconst appointmentRoutes = require(\"./routes/appintment.routes\");\napp.use(\"/\", authenticateToken, appointmentRoutes);\n\napp.use(cors({ origin: \"http://localhost:3000\" }));\n\n//Listening on server port and logging status\nconst PORT = process.env.PORT;\napp.listen(PORT, () => {\n  console.log(\"Server listining on PORT: \", PORT);\n  connectToMongoDB();\n});\n"]}