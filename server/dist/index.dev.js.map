{"version":3,"sources":["index.js"],"names":["express","require","connectToMongoDB","config","cors","app","use","json","urlencoded","extended","patientAuthRoutes","doctorAuthRoutes","pharmacyAuthRoutes","authenticateToken","patientRoutes","prescriptionRoutes","pharmacyRoutes","medicineRoutes","medicationOrderRoutes","doctorRoutes","chatRoutes","appointmentRoutes","origin","PORT","process","env","listen","console","log"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eAC6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACRD,OAAO,CAAC,QAAD,CAAP,CAAkBE,MAAlB;;AACA,IAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,IAAMI,GAAG,GAAGL,OAAO,EAAnB;AACAK,GAAG,CAACC,GAAJ,CAAQN,OAAO,CAACO,IAAR,EAAR,E,CAEA;;AACAF,GAAG,CAACC,GAAJ,CAAQN,OAAO,CAACO,IAAR,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQN,OAAO,CAACQ,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAEA;;AACA,IAAMC,iBAAiB,GAAGT,OAAO,CAAC,8BAAD,CAAjC;;AACAI,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBI,iBAAzB,E,CAEA;;AACA,IAAMC,gBAAgB,GAAGV,OAAO,CAAC,6BAAD,CAAhC;;AACAI,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBK,gBAAxB,E,CAEA;;AACA,IAAMC,kBAAkB,GAAGX,OAAO,CAAC,+BAAD,CAAlC;;AACAI,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0BM,kBAA1B;;gBAE8BX,OAAO,CAAC,8BAAD,C;IAA7BY,iB,aAAAA,iB,EAER;;;AACA,IAAMC,aAAa,GAAGb,OAAO,CAAC,yBAAD,CAA7B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaO,iBAAb,EAAgCC,aAAhC,E,CAEA;;AACA,IAAMC,kBAAkB,GAAGd,OAAO,CAAC,8BAAD,CAAlC;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaO,iBAAb,EAAgCE,kBAAhC,E,CAEA;;AACA,IAAMC,cAAc,GAAGf,OAAO,CAAC,0BAAD,CAA9B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaO,iBAAb,EAAgCG,cAAhC,E,CAEA;;AACA,IAAMC,cAAc,GAAGhB,OAAO,CAAC,0BAAD,CAA9B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaO,iBAAb,EAAgCI,cAAhC,E,CAEA;;AACA,IAAMC,qBAAqB,GAAGjB,OAAO,CAAC,kCAAD,CAArC;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaO,iBAAb,EAAgCK,qBAAhC,E,CAEA;;AACA,IAAMC,YAAY,GAAGlB,OAAO,CAAC,wBAAD,CAA5B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaO,iBAAb,EAAgCM,YAAhC,E,CAEA;;AACA,IAAMC,UAAU,GAAGnB,OAAO,CAAC,sBAAD,CAA1B;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaO,iBAAb,EAAgCO,UAAhC,E,CAEA;;AACA,IAAMC,iBAAiB,GAAGpB,OAAO,CAAC,4BAAD,CAAjC;;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaO,iBAAb,EAAgCQ,iBAAhC;AAEAhB,GAAG,CAACC,GAAJ,CAAQF,IAAI,CAAC;AAAEkB,EAAAA,MAAM,EAAE;AAAV,CAAD,CAAZ,E,CAEA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAzB;AACAlB,GAAG,CAACqB,MAAJ,CAAWH,IAAX,EAAiB,YAAM;AACrBI,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CL,IAA1C;AACArB,EAAAA,gBAAgB;AACjB,CAHD","sourcesContent":["const express = require(\"express\");\nconst { connectToMongoDB } = require(\"./config/mongoDb.config\");\nrequire(\"dotenv\").config();\nconst cors = require(\"cors\");\n\n//Initilizing app as express method\nconst app = express();\napp.use(express.json());\n\n// Middlewares for parsing JSON and URL-encoded data\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// patient auth route\nconst patientAuthRoutes = require(\"./routes/patient.auth.routes\");\napp.use(\"/patient/auth\", patientAuthRoutes);\n\n// doctor auth route\nconst doctorAuthRoutes = require(\"./routes/doctor.auth.routes\");\napp.use(\"/doctor/auth\", doctorAuthRoutes);\n\n// pharmacy auth route\nconst pharmacyAuthRoutes = require(\"./routes/pharmacy.auth.routes\");\napp.use(\"/pharmacy/auth\", pharmacyAuthRoutes);\n\nconst { authenticateToken } = require(\"./middleware/auth.middleware\");\n\n// patient routes\nconst patientRoutes = require(\"./routes/patient.routes\");\napp.use(\"/\", authenticateToken, patientRoutes);\n\n// prescription routes\nconst prescriptionRoutes = require(\"./routes/prescription.routes\");\napp.use(\"/\", authenticateToken, prescriptionRoutes);\n\n// pharmacy routes\nconst pharmacyRoutes = require(\"./routes/pharmacy.routes\");\napp.use(\"/\", authenticateToken, pharmacyRoutes);\n\n// medicine routes\nconst medicineRoutes = require(\"./routes/medicine.routes\");\napp.use(\"/\", authenticateToken, medicineRoutes);\n\n// medication order routes\nconst medicationOrderRoutes = require(\"./routes/medication.order.routes\");\napp.use(\"/\", authenticateToken, medicationOrderRoutes);\n\n// doctor routes\nconst doctorRoutes = require(\"./routes/doctor.routes\");\napp.use(\"/\", authenticateToken, doctorRoutes);\n\n// chat routes\nconst chatRoutes = require(\"./routes/chat.routes\");\napp.use(\"/\", authenticateToken, chatRoutes);\n\n// appointment routes\nconst appointmentRoutes = require(\"./routes/appintment.routes\");\napp.use(\"/\", authenticateToken, appointmentRoutes);\n\napp.use(cors({ origin: \"http://localhost:3000\" }));\n\n//Listening on server port and logging status\nconst PORT = process.env.PORT;\napp.listen(PORT, () => {\n  console.log(\"Server listining on PORT: \", PORT);\n  connectToMongoDB();\n});\n"],"file":"index.dev.js"}